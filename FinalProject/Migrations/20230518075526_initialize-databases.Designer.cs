// <auto-generated />
using System;
using FinalProject.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinalProject.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20230518075526_initialize-databases")]
    partial class initializedatabases
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FinalProject.Entities.BaiViet", b =>
                {
                    b.Property<int>("BaiVietId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BaiVietId"));

                    b.Property<int>("ChuDeId")
                        .HasColumnType("int");

                    b.Property<string>("HinhAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoiDungNgan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaiKhoanId")
                        .HasColumnType("int");

                    b.Property<string>("TenBaiViet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenTacGia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BaiVietId");

                    b.HasIndex("ChuDeId");

                    b.HasIndex("TaiKhoanId");

                    b.ToTable("BaiViets");
                });

            modelBuilder.Entity("FinalProject.Entities.ChuDe", b =>
                {
                    b.Property<int>("ChuDeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ChuDeId"));

                    b.Property<int>("LoaiBaiVietId")
                        .HasColumnType("int");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenChuDe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ChuDeId");

                    b.HasIndex("LoaiBaiVietId");

                    b.ToTable("ChuDes");
                });

            modelBuilder.Entity("FinalProject.Entities.DangKiHoc", b =>
                {
                    b.Property<int>("DangKiHocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DangKiHocId"));

                    b.Property<int>("HocVienId")
                        .HasColumnType("int");

                    b.Property<int>("KhoaHocId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayDangKi")
                        .HasColumnType("datetime2");

                    b.Property<int>("TaiKhoanId")
                        .HasColumnType("int");

                    b.Property<int>("TinhTrangHocId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ngayKetThuc")
                        .HasColumnType("datetime2");

                    b.HasKey("DangKiHocId");

                    b.HasIndex("HocVienId");

                    b.HasIndex("KhoaHocId");

                    b.HasIndex("TaiKhoanId");

                    b.HasIndex("TinhTrangHocId");

                    b.ToTable("DangKiHocs");
                });

            modelBuilder.Entity("FinalProject.Entities.HocVien", b =>
                {
                    b.Property<int>("HocVienId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HocVienId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HinhAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hoten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhuongXa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuanHuyen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoNha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TinhThanh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HocVienId");

                    b.ToTable("HocViens");
                });

            modelBuilder.Entity("FinalProject.Entities.KhoaHoc", b =>
                {
                    b.Property<int>("KhoaHocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KhoaHocId"));

                    b.Property<string>("GioiThieu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HinhAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HocPhi")
                        .HasColumnType("int");

                    b.Property<int>("LoaikhoaHocId")
                        .HasColumnType("int");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoHocVien")
                        .HasColumnType("int");

                    b.Property<int>("SoLuongMon")
                        .HasColumnType("int");

                    b.Property<string>("TenKhoaHoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KhoaHocId");

                    b.HasIndex("LoaikhoaHocId");

                    b.ToTable("KhoaHocs");
                });

            modelBuilder.Entity("FinalProject.Entities.LoaiBaiViet", b =>
                {
                    b.Property<int>("LoaiBaiVietId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoaiBaiVietId"));

                    b.Property<string>("TenLoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LoaiBaiVietId");

                    b.ToTable("LoaiBaiViets");
                });

            modelBuilder.Entity("FinalProject.Entities.LoaiKhoaHoc", b =>
                {
                    b.Property<int>("LoaiKhoaHocId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LoaiKhoaHocId"));

                    b.Property<string>("TenLoaiKhoahoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LoaiKhoaHocId");

                    b.ToTable("LoaiKhoaHocs");
                });

            modelBuilder.Entity("FinalProject.Entities.QuyenHan", b =>
                {
                    b.Property<int>("QuyenHanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuyenHanId"));

                    b.Property<string>("TenQuyenhan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("QuyenHanId");

                    b.ToTable("QuyenHans");
                });

            modelBuilder.Entity("FinalProject.Entities.TaiKhoan", b =>
                {
                    b.Property<int>("TaiKhoanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaiKhoanId"));

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuyenHanId")
                        .HasColumnType("int");

                    b.Property<string>("TenNguoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenTaiKhoan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TaiKhoanId");

                    b.HasIndex("QuyenHanId");

                    b.ToTable("TaiKhoans");
                });

            modelBuilder.Entity("FinalProject.Entities.TinhTrangHoc", b =>
                {
                    b.Property<int>("TinhTrangHocid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TinhTrangHocid"));

                    b.Property<string>("TenTinhTrang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TinhTrangHocid");

                    b.ToTable("TinhTrangHocs");
                });

            modelBuilder.Entity("FinalProject.Entities.BaiViet", b =>
                {
                    b.HasOne("FinalProject.Entities.ChuDe", "chude")
                        .WithMany()
                        .HasForeignKey("ChuDeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProject.Entities.TaiKhoan", "taikhoan")
                        .WithMany()
                        .HasForeignKey("TaiKhoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("chude");

                    b.Navigation("taikhoan");
                });

            modelBuilder.Entity("FinalProject.Entities.ChuDe", b =>
                {
                    b.HasOne("FinalProject.Entities.LoaiBaiViet", "loaiBaiViet")
                        .WithMany()
                        .HasForeignKey("LoaiBaiVietId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("loaiBaiViet");
                });

            modelBuilder.Entity("FinalProject.Entities.DangKiHoc", b =>
                {
                    b.HasOne("FinalProject.Entities.HocVien", "hocvien")
                        .WithMany()
                        .HasForeignKey("HocVienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProject.Entities.KhoaHoc", "KhoaHoc")
                        .WithMany()
                        .HasForeignKey("KhoaHocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProject.Entities.TaiKhoan", "taikhoan")
                        .WithMany()
                        .HasForeignKey("TaiKhoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinalProject.Entities.TinhTrangHoc", "tinhtranghoc")
                        .WithMany()
                        .HasForeignKey("TinhTrangHocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhoaHoc");

                    b.Navigation("hocvien");

                    b.Navigation("taikhoan");

                    b.Navigation("tinhtranghoc");
                });

            modelBuilder.Entity("FinalProject.Entities.KhoaHoc", b =>
                {
                    b.HasOne("FinalProject.Entities.LoaiKhoaHoc", "loaikhoahoc")
                        .WithMany()
                        .HasForeignKey("LoaikhoaHocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("loaikhoahoc");
                });

            modelBuilder.Entity("FinalProject.Entities.TaiKhoan", b =>
                {
                    b.HasOne("FinalProject.Entities.QuyenHan", "quyenhan")
                        .WithMany()
                        .HasForeignKey("QuyenHanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("quyenhan");
                });
#pragma warning restore 612, 618
        }
    }
}
